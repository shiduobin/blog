(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{590:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"输出是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#输出是什么"}},[t._v("#")]),t._v(" 输出是什么？")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lydia"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("ul",[a("li",[t._v("A: "),a("code",[t._v("Lydia")]),t._v(" 和 "),a("code",[t._v("undefined")])]),t._v(" "),a("li",[t._v("B: "),a("code",[t._v("Lydia")]),t._v(" 和 "),a("code",[t._v("ReferenceError")])]),t._v(" "),a("li",[t._v("C: "),a("code",[t._v("Lydia")]),t._v(" 和 "),a("code",[t._v("21")])]),t._v(" "),a("li",[t._v("D: "),a("code",[t._v("undefined")]),t._v(" 和 "),a("code",[t._v("ReferenceError")])])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("点击查看讲解")]),t._v(" "),a("p",[a("strong",[t._v("答案: D")])]),t._v(" "),a("p",[t._v("在函数内部，我们首先通过 "),a("code",[t._v("var")]),t._v(" 关键字声明了 "),a("code",[t._v("name")]),t._v(" 变量。这意味着变量被提升了（内存空间在创建阶段就被设置好了），直到程序运行到定义变量位置之前默认值都是 "),a("code",[t._v("undefined")]),t._v("。因为当我们打印 "),a("code",[t._v("name")]),t._v(" 变量时还没有执行到定义变量的位置，因此变量的值保持为 "),a("code",[t._v("undefined")]),t._v("。\n通过 "),a("code",[t._v("let")]),t._v(" 和 "),a("code",[t._v("const")]),t._v(" 关键字声明的变量也会提升，但是和 "),a("code",[t._v("var")]),t._v(" 不同，它们不会被初始化。在我们声明（初始化）之前是不能访问它们的。这个行为被称之为暂时性死区。当我们试图在声明之前访问它们时，JavaScript 将会抛出一个 "),a("code",[t._v("ReferenceError")]),t._v(" 错误。")])])])}),[],!1,null,null,null);s.default=e.exports}}]);