(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{593:function(t,s,a){"use strict";a.r(s);var n=a(6),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"什么是-bem"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-bem"}},[t._v("#")]),t._v(" 什么是 BEM")]),t._v(" "),a("p",[t._v("BEM 是一种前端命名方法论，主要是针对 CSS，意思是块（Block）、元素（Element）、修饰符（Modifier）的简写。这种命名方法让 CSS 便于统一团队开发规范和方便维护。")]),t._v(" "),a("p",[t._v('BEM 规定是块和元素之间用"__"连接，元素和修饰符之间用"--"连接。')]),t._v(" "),a("p",[t._v("命名模式如下：\n"),a("code",[t._v(".块__元素--修饰符{}")])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("block 代表了更高级别的抽象或组件")])]),t._v(" "),a("li",[a("code",[t._v("block__element 代表 block 的后代，用于形成一个完整的 block 的整体")])]),t._v(" "),a("li",[a("code",[t._v("block--modifier 代表 block 的不同状态或不同版本")])])]),t._v(" "),a("h2",{attrs:{id:"bem-命名法的好处"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bem-命名法的好处"}},[t._v("#")]),t._v(" BEM 命名法的好处")]),t._v(" "),a("p",[t._v("BEM 的关键是，可以获得更多的描述和更加清晰的结构，从其名字可以知道某个标记的含义。于是，通过查看 HTML 代码中的 class 属性，就能知道元素之间的关联。")]),t._v(" "),a("h2",{attrs:{id:"什么时候应该用-bem-格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么时候应该用-bem-格式"}},[t._v("#")]),t._v(" 什么时候应该用 BEM 格式")]),t._v(" "),a("p",[t._v("使用 BEM 的诀窍是，你要知道什么时候哪些东西是应该写成 BEM 格式的。并不是每个地方都应该使用 BEM 命名方式。当需要明确关联性的模块关系时，应当使用 BEM 格式。比如下面，只是一条公共的单独的样式，就没有使用 BEM 格式的意义。")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".hide")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("display")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" none "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("!important")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"在-css-预处理器中使用-bem-格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-css-预处理器中使用-bem-格式"}},[t._v("#")]),t._v(" 在 CSS 预处理器中使用 BEM 格式")]),t._v(" "),a("p",[t._v("BEM 的一个槽点是，命名方式长而难看，书写不雅。相比 BEM 格式带来的便利来说，我们应客观看待。而且，一般来说会使用通过 LESS/SASS 等预处理器语言来编写 CSS，利用其语言特性书写起来要简单很多。")]),t._v(" "),a("p",[t._v("以 LESS 为例：")]),t._v(" "),a("div",{staticClass:"language-css extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[t._v("　"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".article")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("max-width")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 1200px"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(";\n  &__body")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 20px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("&__button")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("padding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5px 8px"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(";\n    &--primary")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" blue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v("&--success")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("background")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" green"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"结束语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结束语"}},[t._v("#")]),t._v(" 结束语")]),t._v(" "),a("p",[t._v("所以，BEM（或 BEM 的变体）是一个非常有用、强大、简单的命名约定，以至于让你的前端代码更容易阅读和理解，更容易协作、更容易控制、更加健壮和明确而且更加严密。\n尽管 BEM 看上去多少有点奇怪，但是无论什么项目，它对前端开发者都是一个巨有价值的工具。")])])}),[],!1,null,null,null);s.default=e.exports}}]);